pipeline {
    agent any

    environment {
        CA_DIR = 'CA2/Part2/react-and-spring-data-rest-basic'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/fba-araujo/devops-23-24-PSM-1231826.git'
            }
        }
        stage('Assemble') {
            steps {
                dir(env.CA_DIR) {
                    sh 'chmod +x gradlew'
                    sh './gradlew assemble'
                }
            }
        }
        stage('Test') {
            steps {
                dir(env.CA_DIR) {
                    sh './gradlew test'
                    junit 'build/test-results/test/*.xml'
                }
            }
        }
        stage('Javadoc') {
            steps {
                dir(env.CA_DIR) {
                    sh './gradlew javadoc'
                    publishHTML(target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: true,
                        reportDir: 'build/docs/javadoc',
                        reportFiles: 'index.html',
                        reportName: 'Javadoc'
                    ])
                }
            }
        }
        stage('Archive') {
            steps {
                dir(env.CA_DIR) {
                    archiveArtifacts artifacts: 'build/libs/*.war', fingerprint: true
                }
            }
        }
        stage('Create Dockerfile') {
            steps {
                echo 'Creating Dockerfile...'
                dir(env.CA_DIR) {
                    script {
                        def dockerfile = """
                        FROM tomcat:10-jdk17-openjdk-slim

                        # Remove the default ROOT application
                        RUN rm -rf /usr/local/tomcat/webapps/ROOT

                        # Copy the WAR file to the webapps directory in Tomcat
                        COPY build/libs/react-and-spring-data-rest-basic-0.0.1-SNAPSHOT.war /usr/local/tomcat/webapps/ROOT.war
                        """
                        writeFile file: 'CA5', text: dockerfile
                    }
                }
            }
        }

        stage('Publish Image') {
            steps {
                script {
                    dir(env.CA_DIR) {
                            def customImage = docker.build("filipaba/devops:${env.BUILD_ID}")
                            docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                                customImage.push()
                            }
                    }
                }
            }
        }
    }
}
